{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/zoom.js","webpack:///./node_modules/zoom-image/js/zoom-image.js","webpack:///./src/since.js","webpack:///./src/promo-script.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","zoom","Array","forEach","$","not","el","factory","windowWidth","document","documentElement","clientWidth","windowHeight","clientHeight","Size","w","h","this","ZoomImage","img","offset","preservedTransform","style","transform","wrap","overlay","forceRepaint","offsetWidth","size","naturalWidth","naturalHeight","createElement","classList","add","parentNode","insertBefore","appendChild","setAttribute","body","scale","calculateScale","animate","maxScaleFactor","width","viewportWidth","viewportHeight","imageAspectRatio","viewportAspectRatio","elem","rect","docElem","win","imageOffset","getBoundingClientRect","window","top","pageYOffset","clientTop","left","pageXOffset","clientLeft","scrollTop","viewportX","viewportY","imgTr","wrapTr","height","dispose","remove","removeChild","close","type","handler","this$1","length","removeAttribute","addEventListener","fn","e","target","removeEventListener","current","initialScrollPos","initialTouchPos","handleScroll","Math","abs","closeCurrent","handleKeyup","keyCode","handleTouchStart","touches","pageY","handleTouchMove","handleClick","force","prepareZoom","contains","metaKey","ctrlKey","open","getAttribute","src","define","showSinceTime","setTimeout","now","Date","grt","setTime","getTime","days","dnum","floor","hours","hnum","String","minutes","mnum","seconds","snum","round","html","canvas","pr","devicePixelRatio","innerWidth","innerHeight","cssText","getElementsByTagName","resizeCanvas","config","SIM_RESOLUTION","DYE_RESOLUTION","CAPTURE_RESOLUTION","DENSITY_DISSIPATION","VELOCITY_DISSIPATION","PRESSURE","PRESSURE_ITERATIONS","CURL","SPLAT_RADIUS","SPLAT_FORCE","SHADING","COLORFUL","COLOR_UPDATE_SPEED","PAUSED","BACK_COLOR","g","b","TRANSPARENT","BLOOM","BLOOM_ITERATIONS","BLOOM_RESOLUTION","BLOOM_INTENSITY","BLOOM_THRESHOLD","BLOOM_SOFT_KNEE","SUNRAYS","SUNRAYS_RESOLUTION","SUNRAYS_WEIGHT","pointerPrototype","id","texcoordX","texcoordY","prevTexcoordX","prevTexcoordY","deltaX","deltaY","down","moved","color","pointers","splatStack","push","halfFloat","supportLinearFiltering","params","alpha","depth","stencil","antialias","preserveDrawingBuffer","gl","getContext","isWebGL2","getExtension","clearColor","formatRGBA","formatRG","formatR","halfFloatTexType","HALF_FLOAT","HALF_FLOAT_OES","getSupportedFormat","RGBA16F","RGBA","RG16F","RG","R16F","RED","ext","getWebGLContext","internalFormat","format","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","fbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","supportRenderTextureFormat","test","navigator","userAgent","Material","vertexShader","fragmentShaderSource","programs","activeProgram","uniforms","keywords","hash","hashCode","program","fragmentShader","compileShader","FRAGMENT_SHADER","createProgram","getUniforms","useProgram","Program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","console","trace","getProgramInfoLog","uniformCount","ACTIVE_UNIFORMS","uniformName","getActiveUniform","getUniformLocation","source","keywordsString","keyword","addKeywords","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","dye","velocity","divergence","curl","pressure","bloom","baseVertexShader","VERTEX_SHADER","blurVertexShader","blurShader","copyShader","clearShader","colorShader","checkerboardShader","bloomPrefilterShader","bloomBlurShader","bloomFinalShader","sunraysMaskShader","sunraysShader","splatShader","advectionShader","divergenceShader","curlShader","vorticityShader","pressureShader","gradientSubtractShader","blit","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","Float32Array","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","Uint16Array","vertexAttribPointer","FLOAT","enableVertexAttribArray","clear","viewport","drawingBufferWidth","drawingBufferHeight","COLOR_BUFFER_BIT","drawElements","TRIANGLES","UNSIGNED_SHORT","sunrays","sunraysTemp","displayKeywords","bloomFramebuffers","blurProgram","copyProgram","clearProgram","colorProgram","checkerboardProgram","bloomPrefilterProgram","bloomBlurProgram","bloomFinalProgram","sunraysMaskProgram","sunraysProgram","splatProgram","advectionProgram","divergenceProgram","curlProgram","vorticityProgram","pressureProgram","gradienSubtractProgram","displayMaterial","initFramebuffers","simRes","getResolution","dyeRes","texType","rgba","rg","filtering","LINEAR","disable","BLEND","createDoubleFBO","resizeDoubleFBO","createFBO","res","initBloomFramebuffers","initSunraysFramebuffers","param","activeTexture","TEXTURE0","texelSizeX","texelSizeY","attach","fbo1","fbo2","swap","temp","read","newFBO","uniform1i","uTexture","resizeFBO","write","setKeywords","multipleSplats","parseInt","random","lastUpdateTime","colorUpdateTimer","scaleByPixelRatio","render","mask","destination","input","last","knee","curve0","curve1","curve2","uniform3f","curve","uniform1f","threshold","dest","uniform2f","texelSize","blendFunc","ONE","enable","baseTex","intensity","applyBloom","weight","iterations","blur","ONE_MINUS_SRC_ALPHA","uniform4f","drawColor","aspectRatio","drawCheckerboard","uBloom","uSunrays","drawDisplay","amount","generateColor","splat","x","y","dx","dy","uTarget","point","radius","correctRadius","updatePointerDownData","pointer","posX","posY","updatePointerMoveData","delta","correctDeltaX","correctDeltaY","updatePointerUpData","v","f","q","HSVtoRGB","resolution","min","max","pixelRatio","charCodeAt","update","dt","calcDeltaTime","range","updateColors","pop","applyInputs","uVelocity","uCurl","uDivergence","uPressure","dyeTexelSize","velocityId","uSource","dissipation","step","requestAnimationFrame","offsetX","offsetY","find","preventDefault","targetTouches","pageX","identifier","changedTouches","onclick"],"mappings":"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","file":"fsql.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","require('./zoom')();\nrequire('./since');\nrequire('./motion');\nrequire('./promo-script');\n","const zoom = require('zoom-image');\n\nfunction zoomContent () {\n  Array.prototype.forEach.call($('.content img').not('[hidden]').not('.no-fancybox').not('.post-share img'), el => {\n    zoom(el);\n  });\n}\n\nmodule.exports = zoomContent;\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.zoom = factory());\n}(this, (function () { 'use strict';\n\nvar windowWidth = function () { return document.documentElement.clientWidth; };\nvar windowHeight = function () { return document.documentElement.clientHeight; };\n\nvar elemOffset = function (elem) {\n  var rect = elem.getBoundingClientRect();\n  var docElem = document.documentElement;\n  var win = window;\n  return {\n    top: rect.top + win.pageYOffset - docElem.clientTop,\n    left: rect.left + win.pageXOffset - docElem.clientLeft\n  }\n};\n\nvar once = function (elem, type, handler) {\n  var fn = function (e) {\n    e.target.removeEventListener(type, fn);\n    handler();\n  };\n  elem.addEventListener(type, fn);\n};\n\nvar Size = function Size(w, h) {\n  this.w = w;\n  this.h = h;\n};\n\nvar ZoomImage = function ZoomImage(img, offset) {\n  this.img = img;\n  this.preservedTransform = img.style.transform;\n  this.wrap = null;\n  this.overlay = null;\n  this.offset = offset;\n};\n\nZoomImage.prototype.forceRepaint = function forceRepaint () {\n  var _ = this.img.offsetWidth;\n  return\n};\n\nZoomImage.prototype.zoom = function zoom () {\n  var size = new Size(this.img.naturalWidth, this.img.naturalHeight);\n\n  this.wrap = document.createElement('div');\n  this.wrap.classList.add('zoom-img-wrap');\n  this.img.parentNode.insertBefore(this.wrap, this.img);\n  this.wrap.appendChild(this.img);\n\n  this.img.classList.add('zoom-img');\n  this.img.setAttribute('data-action', 'zoom-out');\n\n  this.overlay = document.createElement('div');\n  this.overlay.classList.add('zoom-overlay');\n  document.body.appendChild(this.overlay);\n\n  this.forceRepaint();\n  var scale = this.calculateScale(size);\n\n  this.forceRepaint();\n  this.animate(scale);\n\n  document.body.classList.add('zoom-overlay-open');\n};\n\nZoomImage.prototype.calculateScale = function calculateScale (size) {\n  var maxScaleFactor = size.w / this.img.width;\n\n  var viewportWidth = (windowWidth() - this.offset);\n  var viewportHeight = (windowHeight() - this.offset);\n  var imageAspectRatio = size.w / size.h;\n  var viewportAspectRatio = viewportWidth / viewportHeight;\n\n  if (size.w < viewportWidth && size.h < viewportHeight) {\n    return maxScaleFactor\n  } else if (imageAspectRatio < viewportAspectRatio) {\n    return (viewportHeight / size.h) * maxScaleFactor\n  }\n  return (viewportWidth / size.w) * maxScaleFactor\n};\n\nZoomImage.prototype.animate = function animate (scale) {\n  var imageOffset = elemOffset(this.img);\n  var scrollTop = window.pageYOffset;\n\n  var viewportX = (windowWidth() / 2);\n  var viewportY = scrollTop + (windowHeight() / 2);\n\n  var imageCenterX = imageOffset.left + (this.img.width / 2);\n  var imageCenterY = imageOffset.top + (this.img.height / 2);\n\n  var tx = viewportX - imageCenterX;\n  var ty = viewportY - imageCenterY;\n  var tz = 0;\n\n  var imgTr = \"scale(\" + scale + \")\";\n  var wrapTr = \"translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n\n  this.img.style.transform = imgTr;\n  this.wrap.style.transform = wrapTr;\n};\n\nZoomImage.prototype.dispose = function dispose () {\n  if (this.wrap === null || this.wrap.parentNode === null) {\n    return\n  }\n  this.img.classList.remove('zoom-img');\n  this.img.setAttribute('data-action', 'zoom');\n\n  this.wrap.parentNode.insertBefore(this.img, this.wrap);\n  this.wrap.parentNode.removeChild(this.wrap);\n\n  document.body.removeChild(this.overlay);\n  document.body.classList.remove('zoom-overlay-transitioning');\n};\n\nZoomImage.prototype.close = function close () {\n    var this$1 = this;\n\n  document.body.classList.add('zoom-overlay-transitioning');\n  this.img.style.transform = this.preservedTransform;\n  if (this.img.style.length === 0) {\n    this.img.removeAttribute('style');\n  }\n  this.wrap.style.transform = 'none';\n\n  once(this.img, 'transitionend', function () {\n    this$1.dispose();\n    // remove class should happen after dispose. Otherwise,\n    // a new click event could fire and create a duplicate ZoomImage for\n    // the same <img> element.\n    document.body.classList.remove('zoom-overlay-open');\n  });\n};\n\n/**\n * Pure JavaScript implementation of zoom.js.\n *\n * Original preamble:\n * zoom.js - It's the best way to zoom an image\n * @version v0.0.2\n * @link https://github.com/fat/zoom.js\n * @license MIT\n *\n * Needs a related CSS file to work. See the README at\n * https://github.com/nishanths/zoom.js for more info.\n *\n * This is a fork of the original zoom.js implementation by @fat.\n * Copyrights for the original project are held by @fat. All other copyright\n * for changes in the fork are held by Nishanth Shanmugham.\n *\n * Copyright (c) 2013 @fat\n * The MIT License. Copyright © 2016 Nishanth Shanmugham.\n */\n\nvar current = null;\nvar offset = 80;\nvar initialScrollPos = -1;\nvar initialTouchPos = -1;\n\nfunction handleScroll() {\n  if (initialScrollPos === -1) {\n    initialScrollPos = window.pageYOffset;\n  }\n\n  var deltaY = Math.abs(initialScrollPos - window.pageYOffset);\n  if (deltaY >= 40) {\n    closeCurrent();\n  }\n}\n\nfunction handleKeyup(e) {\n  if (e.keyCode === 27) {\n    closeCurrent();\n  }\n}\n\nfunction handleTouchStart(e) {\n  var t = e.touches[0];\n  if (t === null) {\n    return\n  }\n\n  initialTouchPos = t.pageY;\n  e.target.addEventListener('touchmove', handleTouchMove);\n}\n\nfunction handleTouchMove(e) {\n  var t = e.touches[0];\n  if (t === null) {\n    return\n  }\n\n  if (Math.abs(t.pageY - initialTouchPos) > 10) {\n    closeCurrent();\n    e.target.removeEventListener('touchmove', handleTouchMove);\n  }\n}\n\nfunction handleClick() {\n  closeCurrent();\n}\n\nfunction addCloseListeners() {\n  document.addEventListener('scroll', handleScroll);\n  document.addEventListener('keyup', handleKeyup);\n  document.addEventListener('touchstart', handleTouchStart);\n  document.addEventListener('click', handleClick, true);\n}\n\nfunction removeCloseListeners() {\n  document.removeEventListener('scroll', handleScroll);\n  document.removeEventListener('keyup', handleKeyup);\n  document.removeEventListener('touchstart', handleTouchStart);\n  document.removeEventListener('click', handleClick, true);\n}\n\nfunction closeCurrent(force) {\n  if (current === null) {\n    return\n  }\n  if (force) {\n    current.dispose();\n  } else {\n    current.close();\n  }\n  removeCloseListeners();\n  current = null;\n}\n\nfunction prepareZoom(e) {\n  if (document.body.classList.contains('zoom-overlay-open')) {\n    return\n  }\n\n  if (e.metaKey || e.ctrlKey) {\n    window.open((e.target.getAttribute('data-original') || e.target.src), '_blank');\n    return\n  }\n\n  if (e.target.width >= windowWidth() - offset) {\n    return\n  }\n\n  closeCurrent(true);\n\n  current = new ZoomImage(e.target, offset);\n  current.zoom();\n\n  addCloseListeners();\n}\n\nvar zoom = function (el) {\n  el.setAttribute('data-action', 'zoom');\n  el.addEventListener('click', prepareZoom);\n  return function () { return el.removeEventListener('click', prepareZoom); }\n};\n\nreturn zoom;\n\n})));\n","function showSinceTime() {\n  window.setTimeout(function () {\n    showSinceTime();\n  }, 1000);\n  let now = new Date();\n  let grt= new Date(\"09/08/2020 00:00:00\");//此处修改你的建站时间或者网站上线时间\n  now.setTime(now.getTime()+250);\n  days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days);\n  hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours);\n  if(String(hnum).length ==1 ){hnum = \"0\" + hnum;} minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);\n  mnum = Math.floor(minutes); if(String(mnum).length ==1 ){mnum = \"0\" + mnum;}\n  seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);\n  snum = Math.round(seconds); if(String(snum).length ==1 ){snum = \"0\" + snum;}\n  $('#timeDate').html(\"本博客已运行 \"+dnum+\" 天 \");\n  $('#times').html(hnum + \" 小时 \" + mnum + \" 分 \" + snum + \" 秒\");\n}\nshowSinceTime();\n","\n'use strict';\n\n\nconst canvas = document.createElement('canvas'),\n  pr = window.devicePixelRatio || 1,\n  width = window.innerWidth,\n  height = window.innerHeight;\ncanvas.width = width * pr;\ncanvas.height = height * pr;\ncanvas.style.cssText = 'opacity: 0.3;position:fixed;top:0;left:0;z-index: -1;width:100%;height:100%;pointer-events:none;';\n// create canvas\ndocument.getElementsByTagName('body')[0].appendChild(canvas);\n\nresizeCanvas();\n\n\nlet config = {\n  SIM_RESOLUTION: 128,\n  DYE_RESOLUTION: 1024,\n  CAPTURE_RESOLUTION: 512,\n  DENSITY_DISSIPATION: 1,\n  VELOCITY_DISSIPATION: 0.2,\n  PRESSURE: 0.8,\n  PRESSURE_ITERATIONS: 20,\n  CURL: 35,\n  SPLAT_RADIUS: 0.25,\n  SPLAT_FORCE: 6000,\n  SHADING: true,\n  COLORFUL: true,\n  COLOR_UPDATE_SPEED: 10,\n  PAUSED: false,\n  BACK_COLOR: { r: 255, g: 255, b: 255 },\n  TRANSPARENT: false,\n  BLOOM: true,\n  BLOOM_ITERATIONS: 8,\n  BLOOM_RESOLUTION: 256,\n  BLOOM_INTENSITY: 0.8,\n  BLOOM_THRESHOLD: 0.6,\n  BLOOM_SOFT_KNEE: 0.7,\n  SUNRAYS: true,\n  SUNRAYS_RESOLUTION: 196,\n  SUNRAYS_WEIGHT: 1.0,\n}\n\nfunction pointerPrototype () {\n  this.id = -1;\n  this.texcoordX = 0;\n  this.texcoordY = 0;\n  this.prevTexcoordX = 0;\n  this.prevTexcoordY = 0;\n  this.deltaX = 0;\n  this.deltaY = 0;\n  this.down = false;\n  this.moved = false;\n  this.color = [30, 0, 300];\n}\n\nlet pointers = [];\nlet splatStack = [];\npointers.push(new pointerPrototype());\n\nconst { gl, ext } = getWebGLContext(canvas);\n\nif (isMobile()) {\n  config.DYE_RESOLUTION = 512;\n}\nif (!ext.supportLinearFiltering) {\n  config.DYE_RESOLUTION = 512;\n  config.SHADING = false;\n  config.BLOOM = false;\n  config.SUNRAYS = false;\n}\n\n//startGUI();\n\nfunction getWebGLContext (canvas) {\n  const params = { alpha: true, depth: false, stencil: false, antialias: false, preserveDrawingBuffer: false };\n\n  let gl = canvas.getContext('webgl2', params);\n  const isWebGL2 = !!gl;\n  if (!isWebGL2)\n    gl = canvas.getContext('webgl', params) || canvas.getContext('experimental-webgl', params);\n\n  let halfFloat;\n  let supportLinearFiltering;\n  if (isWebGL2) {\n    gl.getExtension('EXT_color_buffer_float');\n    supportLinearFiltering = gl.getExtension('OES_texture_float_linear');\n  } else {\n    halfFloat = gl.getExtension('OES_texture_half_float');\n    supportLinearFiltering = gl.getExtension('OES_texture_half_float_linear');\n  }\n\n  gl.clearColor(0.0, 0.0, 0.0, 1.0);\n\n  const halfFloatTexType = isWebGL2 ? gl.HALF_FLOAT : halfFloat.HALF_FLOAT_OES;\n  let formatRGBA;\n  let formatRG;\n  let formatR;\n\n  if (isWebGL2)\n  {\n    formatRGBA = getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, halfFloatTexType);\n    formatRG = getSupportedFormat(gl, gl.RG16F, gl.RG, halfFloatTexType);\n    formatR = getSupportedFormat(gl, gl.R16F, gl.RED, halfFloatTexType);\n  }\n  else\n  {\n    formatRGBA = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n    formatRG = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n    formatR = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n  }\n\n  //ga('send', 'event', isWebGL2 ? 'webgl2' : 'webgl', formatRGBA == null ? 'not supported' : 'supported');\n\n  return {\n    gl,\n    ext: {\n      formatRGBA,\n      formatRG,\n      formatR,\n      halfFloatTexType,\n      supportLinearFiltering\n    }\n  };\n}\n\nfunction getSupportedFormat (gl, internalFormat, format, type)\n{\n  if (!supportRenderTextureFormat(gl, internalFormat, format, type))\n  {\n    switch (internalFormat)\n    {\n      case gl.R16F:\n        return getSupportedFormat(gl, gl.RG16F, gl.RG, type);\n      case gl.RG16F:\n        return getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, type);\n      default:\n        return null;\n    }\n  }\n\n  return {\n    internalFormat,\n    format\n  }\n}\n\nfunction supportRenderTextureFormat (gl, internalFormat, format, type) {\n  let texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 4, 4, 0, format, type, null);\n\n  let fbo = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n  let status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n  return status == gl.FRAMEBUFFER_COMPLETE;\n}\n\nfunction isMobile () {\n  return /Mobi|Android/i.test(navigator.userAgent);\n}\n\nfunction captureScreenshot () {\n  let res = getResolution(config.CAPTURE_RESOLUTION);\n  let target = createFBO(res.width, res.height, ext.formatRGBA.internalFormat, ext.formatRGBA.format, ext.halfFloatTexType, gl.NEAREST);\n  render(target);\n\n  let texture = framebufferToTexture(target);\n  texture = normalizeTexture(texture, target.width, target.height);\n\n  let captureCanvas = textureToCanvas(texture, target.width, target.height);\n  let datauri = captureCanvas.toDataURL();\n  downloadURI('fluid.png', datauri);\n  URL.revokeObjectURL(datauri);\n}\n\nfunction framebufferToTexture (target) {\n  gl.bindFramebuffer(gl.FRAMEBUFFER, target.fbo);\n  let length = target.width * target.height * 4;\n  let texture = new Float32Array(length);\n  gl.readPixels(0, 0, target.width, target.height, gl.RGBA, gl.FLOAT, texture);\n  return texture;\n}\n\nfunction normalizeTexture (texture, width, height) {\n  let result = new Uint8Array(texture.length);\n  let id = 0;\n  for (let i = height - 1; i >= 0; i--) {\n    for (let j = 0; j < width; j++) {\n      let nid = i * width * 4 + j * 4;\n      result[nid + 0] = clamp01(texture[id + 0]) * 255;\n      result[nid + 1] = clamp01(texture[id + 1]) * 255;\n      result[nid + 2] = clamp01(texture[id + 2]) * 255;\n      result[nid + 3] = clamp01(texture[id + 3]) * 255;\n      id += 4;\n    }\n  }\n  return result;\n}\n\nfunction clamp01 (input) {\n  return Math.min(Math.max(input, 0), 1);\n}\n\nfunction textureToCanvas (texture, width, height) {\n  let captureCanvas = document.createElement('canvas');\n  let ctx = captureCanvas.getContext('2d');\n  captureCanvas.width = width;\n  captureCanvas.height = height;\n\n  let imageData = ctx.createImageData(width, height);\n  imageData.data.set(texture);\n  ctx.putImageData(imageData, 0, 0);\n\n  return captureCanvas;\n}\n\nfunction downloadURI (filename, uri) {\n  let link = document.createElement('a');\n  link.download = filename;\n  link.href = uri;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n\nclass Material {\n  constructor (vertexShader, fragmentShaderSource) {\n    this.vertexShader = vertexShader;\n    this.fragmentShaderSource = fragmentShaderSource;\n    this.programs = [];\n    this.activeProgram = null;\n    this.uniforms = [];\n  }\n\n  setKeywords (keywords) {\n    let hash = 0;\n    for (let i = 0; i < keywords.length; i++)\n      hash += hashCode(keywords[i]);\n\n    let program = this.programs[hash];\n    if (program == null)\n    {\n      let fragmentShader = compileShader(gl.FRAGMENT_SHADER, this.fragmentShaderSource, keywords);\n      program = createProgram(this.vertexShader, fragmentShader);\n      this.programs[hash] = program;\n    }\n\n    if (program == this.activeProgram) return;\n\n    this.uniforms = getUniforms(program);\n    this.activeProgram = program;\n  }\n\n  bind () {\n    gl.useProgram(this.activeProgram);\n  }\n}\n\nclass Program {\n  constructor (vertexShader, fragmentShader) {\n    this.uniforms = {};\n    this.program = createProgram(vertexShader, fragmentShader);\n    this.uniforms = getUniforms(this.program);\n  }\n\n  bind () {\n    gl.useProgram(this.program);\n  }\n}\n\nfunction createProgram (vertexShader, fragmentShader) {\n  let program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS))\n    console.trace(gl.getProgramInfoLog(program));\n\n  return program;\n}\n\nfunction getUniforms (program) {\n  let uniforms = [];\n  let uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (let i = 0; i < uniformCount; i++) {\n    let uniformName = gl.getActiveUniform(program, i).name;\n    uniforms[uniformName] = gl.getUniformLocation(program, uniformName);\n  }\n  return uniforms;\n}\n\nfunction compileShader (type, source, keywords) {\n  source = addKeywords(source, keywords);\n\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n    console.trace(gl.getShaderInfoLog(shader));\n\n  return shader;\n};\n\nfunction addKeywords (source, keywords) {\n  if (keywords == null) return source;\n  let keywordsString = '';\n  keywords.forEach(keyword => {\n    keywordsString += '#define ' + keyword + '\\n';\n  });\n  return keywordsString + source;\n}\n\nconst baseVertexShader = compileShader(gl.VERTEX_SHADER, `\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n`);\n\nconst blurVertexShader = compileShader(gl.VERTEX_SHADER, `\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        float offset = 1.33333333;\n        vL = vUv - texelSize * offset;\n        vR = vUv + texelSize * offset;\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n`);\n\nconst blurShader = compileShader(gl.FRAGMENT_SHADER, `\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = texture2D(uTexture, vUv) * 0.29411764;\n        sum += texture2D(uTexture, vL) * 0.35294117;\n        sum += texture2D(uTexture, vR) * 0.35294117;\n        gl_FragColor = sum;\n    }\n`);\n\nconst copyShader = compileShader(gl.FRAGMENT_SHADER, `\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        gl_FragColor = texture2D(uTexture, vUv);\n    }\n`);\n\nconst clearShader = compileShader(gl.FRAGMENT_SHADER, `\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n`);\n\nconst colorShader = compileShader(gl.FRAGMENT_SHADER, `\n    precision mediump float;\n\n    uniform vec4 color;\n\n    void main () {\n        gl_FragColor = color;\n    }\n`);\n\nconst checkerboardShader = compileShader(gl.FRAGMENT_SHADER, `\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float aspectRatio;\n\n    #define SCALE 25.0\n\n    void main () {\n        vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n        float v = mod(uv.x + uv.y, 2.0);\n        v = v * 0.1 + 0.8;\n        gl_FragColor = vec4(vec3(v), 1.0);\n    }\n`);\n\nconst displayShaderSource = `\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uSunrays;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    uniform vec2 texelSize;\n\n    vec3 linearToGamma (vec3 color) {\n        color = max(color, vec3(0));\n        return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n    }\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n\n    #ifdef SHADING\n        vec3 lc = texture2D(uTexture, vL).rgb;\n        vec3 rc = texture2D(uTexture, vR).rgb;\n        vec3 tc = texture2D(uTexture, vT).rgb;\n        vec3 bc = texture2D(uTexture, vB).rgb;\n\n        float dx = length(rc) - length(lc);\n        float dy = length(tc) - length(bc);\n\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        c *= diffuse;\n    #endif\n\n    #ifdef BLOOM\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n    #endif\n\n    #ifdef SUNRAYS\n        float sunrays = texture2D(uSunrays, vUv).r;\n        c *= sunrays;\n    #ifdef BLOOM\n        bloom *= sunrays;\n    #endif\n    #endif\n\n    #ifdef BLOOM\n        float noise = texture2D(uDithering, vUv * ditherScale).r;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 255.0;\n        bloom = linearToGamma(bloom);\n        c += bloom;\n    #endif\n\n        float a = max(c.r, max(c.g, c.b));\n        gl_FragColor = vec4(c, a);\n    }\n`;\n\nconst bloomPrefilterShader = compileShader(gl.FRAGMENT_SHADER, `\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform vec3 curve;\n    uniform float threshold;\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n        float br = max(c.r, max(c.g, c.b));\n        float rq = clamp(br - curve.x, 0.0, curve.y);\n        rq = curve.z * rq * rq;\n        c *= max(rq, br - threshold) / max(br, 0.0001);\n        gl_FragColor = vec4(c, 0.0);\n    }\n`);\n\nconst bloomBlurShader = compileShader(gl.FRAGMENT_SHADER, `\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum;\n    }\n`);\n\nconst bloomFinalShader = compileShader(gl.FRAGMENT_SHADER, `\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform float intensity;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum * intensity;\n    }\n`);\n\nconst sunraysMaskShader = compileShader(gl.FRAGMENT_SHADER, `\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 c = texture2D(uTexture, vUv);\n        float br = max(c.r, max(c.g, c.b));\n        c.a = 1.0 - min(max(br * 20.0, 0.0), 0.8);\n        gl_FragColor = c;\n    }\n`);\n\nconst sunraysShader = compileShader(gl.FRAGMENT_SHADER, `\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float weight;\n\n    #define ITERATIONS 16\n\n    void main () {\n        float Density = 0.3;\n        float Decay = 0.95;\n        float Exposure = 0.7;\n\n        vec2 coord = vUv;\n        vec2 dir = vUv - 0.5;\n\n        dir *= 1.0 / float(ITERATIONS) * Density;\n        float illuminationDecay = 1.0;\n\n        float color = texture2D(uTexture, vUv).a;\n\n        for (int i = 0; i < ITERATIONS; i++)\n        {\n            coord -= dir;\n            float col = texture2D(uTexture, coord).a;\n            color += col * illuminationDecay * weight;\n            illuminationDecay *= Decay;\n        }\n\n        gl_FragColor = vec4(color * Exposure, 0.0, 0.0, 1.0);\n    }\n`);\n\nconst splatShader = compileShader(gl.FRAGMENT_SHADER, `\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n`);\n\nconst advectionShader = compileShader(gl.FRAGMENT_SHADER, `\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform vec2 dyeTexelSize;\n    uniform float dt;\n    uniform float dissipation;\n\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n        vec2 st = uv / tsize - 0.5;\n\n        vec2 iuv = floor(st);\n        vec2 fuv = fract(st);\n\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n    }\n\n    void main () {\n    #ifdef MANUAL_FILTERING\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n        vec4 result = bilerp(uSource, coord, dyeTexelSize);\n    #else\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        vec4 result = texture2D(uSource, coord);\n    #endif\n        float decay = 1.0 + dissipation * dt;\n        gl_FragColor = result / decay;\n    }`,\n  ext.supportLinearFiltering ? null : ['MANUAL_FILTERING']\n);\n\nconst divergenceShader = compileShader(gl.FRAGMENT_SHADER, `\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).x;\n        float R = texture2D(uVelocity, vR).x;\n        float T = texture2D(uVelocity, vT).y;\n        float B = texture2D(uVelocity, vB).y;\n\n        vec2 C = texture2D(uVelocity, vUv).xy;\n        if (vL.x < 0.0) { L = -C.x; }\n        if (vR.x > 1.0) { R = -C.x; }\n        if (vT.y > 1.0) { T = -C.y; }\n        if (vB.y < 0.0) { B = -C.y; }\n\n        float div = 0.5 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n    }\n`);\n\nconst curlShader = compileShader(gl.FRAGMENT_SHADER, `\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n    }\n`);\n\nconst vorticityShader = compileShader(gl.FRAGMENT_SHADER, `\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n\n    void main () {\n        float L = texture2D(uCurl, vL).x;\n        float R = texture2D(uCurl, vR).x;\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n\n        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n        force /= length(force) + 0.0001;\n        force *= curl * C;\n        force.y *= -1.0;\n\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity += force * dt;\n        velocity = min(max(velocity, -1000.0), 1000.0);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n`);\n\nconst pressureShader = compileShader(gl.FRAGMENT_SHADER, `\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n`);\n\nconst gradientSubtractShader = compileShader(gl.FRAGMENT_SHADER, `\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n`);\n\nconst blit = (() => {\n  gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1, -1, -1, 1, 1, 1, 1, -1]), gl.STATIC_DRAW);\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer());\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0, 1, 2, 0, 2, 3]), gl.STATIC_DRAW);\n  gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n  gl.enableVertexAttribArray(0);\n\n  return (target, clear = false) => {\n    if (target == null)\n    {\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n    else\n    {\n      gl.viewport(0, 0, target.width, target.height);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, target.fbo);\n    }\n    if (clear)\n    {\n      gl.clearColor(0.0, 0.0, 0.0, 1.0);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    // CHECK_FRAMEBUFFER_STATUS();\n    gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n  }\n})();\n\nfunction CHECK_FRAMEBUFFER_STATUS () {\n  let status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n  if (status != gl.FRAMEBUFFER_COMPLETE)\n    console.trace(\"Framebuffer error: \" + status);\n}\n\nlet dye;\nlet velocity;\nlet divergence;\nlet curl;\nlet pressure;\nlet bloom;\nlet bloomFramebuffers = [];\nlet sunrays;\nlet sunraysTemp;\n\n\n\nconst blurProgram            = new Program(blurVertexShader, blurShader);\nconst copyProgram            = new Program(baseVertexShader, copyShader);\nconst clearProgram           = new Program(baseVertexShader, clearShader);\nconst colorProgram           = new Program(baseVertexShader, colorShader);\nconst checkerboardProgram    = new Program(baseVertexShader, checkerboardShader);\nconst bloomPrefilterProgram  = new Program(baseVertexShader, bloomPrefilterShader);\nconst bloomBlurProgram       = new Program(baseVertexShader, bloomBlurShader);\nconst bloomFinalProgram      = new Program(baseVertexShader, bloomFinalShader);\nconst sunraysMaskProgram     = new Program(baseVertexShader, sunraysMaskShader);\nconst sunraysProgram         = new Program(baseVertexShader, sunraysShader);\nconst splatProgram           = new Program(baseVertexShader, splatShader);\nconst advectionProgram       = new Program(baseVertexShader, advectionShader);\nconst divergenceProgram      = new Program(baseVertexShader, divergenceShader);\nconst curlProgram            = new Program(baseVertexShader, curlShader);\nconst vorticityProgram       = new Program(baseVertexShader, vorticityShader);\nconst pressureProgram        = new Program(baseVertexShader, pressureShader);\nconst gradienSubtractProgram = new Program(baseVertexShader, gradientSubtractShader);\n\nconst displayMaterial = new Material(baseVertexShader, displayShaderSource);\n\nfunction initFramebuffers () {\n  let simRes = getResolution(config.SIM_RESOLUTION);\n  let dyeRes = getResolution(config.DYE_RESOLUTION);\n\n  const texType = ext.halfFloatTexType;\n  const rgba    = ext.formatRGBA;\n  const rg      = ext.formatRG;\n  const r       = ext.formatR;\n  const filtering = ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST;\n\n  gl.disable(gl.BLEND);\n\n  if (dye == null)\n    dye = createDoubleFBO(dyeRes.width, dyeRes.height, rgba.internalFormat, rgba.format, texType, filtering);\n  else\n    dye = resizeDoubleFBO(dye, dyeRes.width, dyeRes.height, rgba.internalFormat, rgba.format, texType, filtering);\n\n  if (velocity == null)\n    velocity = createDoubleFBO(simRes.width, simRes.height, rg.internalFormat, rg.format, texType, filtering);\n  else\n    velocity = resizeDoubleFBO(velocity, simRes.width, simRes.height, rg.internalFormat, rg.format, texType, filtering);\n\n  divergence = createFBO      (simRes.width, simRes.height, r.internalFormat, r.format, texType, gl.NEAREST);\n  curl       = createFBO      (simRes.width, simRes.height, r.internalFormat, r.format, texType, gl.NEAREST);\n  pressure   = createDoubleFBO(simRes.width, simRes.height, r.internalFormat, r.format, texType, gl.NEAREST);\n\n  initBloomFramebuffers();\n  initSunraysFramebuffers();\n}\n\nfunction initBloomFramebuffers () {\n  let res = getResolution(config.BLOOM_RESOLUTION);\n\n  const texType = ext.halfFloatTexType;\n  const rgba = ext.formatRGBA;\n  const filtering = ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST;\n\n  bloom = createFBO(res.width, res.height, rgba.internalFormat, rgba.format, texType, filtering);\n\n  bloomFramebuffers.length = 0;\n  for (let i = 0; i < config.BLOOM_ITERATIONS; i++)\n  {\n    let width = res.width >> (i + 1);\n    let height = res.height >> (i + 1);\n\n    if (width < 2 || height < 2) break;\n\n    let fbo = createFBO(width, height, rgba.internalFormat, rgba.format, texType, filtering);\n    bloomFramebuffers.push(fbo);\n  }\n}\n\nfunction initSunraysFramebuffers () {\n  let res = getResolution(config.SUNRAYS_RESOLUTION);\n\n  const texType = ext.halfFloatTexType;\n  const r = ext.formatR;\n  const filtering = ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST;\n\n  sunrays     = createFBO(res.width, res.height, r.internalFormat, r.format, texType, filtering);\n  sunraysTemp = createFBO(res.width, res.height, r.internalFormat, r.format, texType, filtering);\n}\n\nfunction createFBO (w, h, internalFormat, format, type, param) {\n  gl.activeTexture(gl.TEXTURE0);\n  let texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, param);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, param);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, w, h, 0, format, type, null);\n\n  let fbo = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  gl.viewport(0, 0, w, h);\n  gl.clear(gl.COLOR_BUFFER_BIT);\n\n  let texelSizeX = 1.0 / w;\n  let texelSizeY = 1.0 / h;\n\n  return {\n    texture,\n    fbo,\n    width: w,\n    height: h,\n    texelSizeX,\n    texelSizeY,\n    attach (id) {\n      gl.activeTexture(gl.TEXTURE0 + id);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      return id;\n    }\n  };\n}\n\nfunction createDoubleFBO (w, h, internalFormat, format, type, param) {\n  let fbo1 = createFBO(w, h, internalFormat, format, type, param);\n  let fbo2 = createFBO(w, h, internalFormat, format, type, param);\n\n  return {\n    width: w,\n    height: h,\n    texelSizeX: fbo1.texelSizeX,\n    texelSizeY: fbo1.texelSizeY,\n    get read () {\n      return fbo1;\n    },\n    set read (value) {\n      fbo1 = value;\n    },\n    get write () {\n      return fbo2;\n    },\n    set write (value) {\n      fbo2 = value;\n    },\n    swap () {\n      let temp = fbo1;\n      fbo1 = fbo2;\n      fbo2 = temp;\n    }\n  }\n}\n\nfunction resizeFBO (target, w, h, internalFormat, format, type, param) {\n  let newFBO = createFBO(w, h, internalFormat, format, type, param);\n  copyProgram.bind();\n  gl.uniform1i(copyProgram.uniforms.uTexture, target.attach(0));\n  blit(newFBO);\n  return newFBO;\n}\n\nfunction resizeDoubleFBO (target, w, h, internalFormat, format, type, param) {\n  if (target.width == w && target.height == h)\n    return target;\n  target.read = resizeFBO(target.read, w, h, internalFormat, format, type, param);\n  target.write = createFBO(w, h, internalFormat, format, type, param);\n  target.width = w;\n  target.height = h;\n  target.texelSizeX = 1.0 / w;\n  target.texelSizeY = 1.0 / h;\n  return target;\n}\n\nfunction createTextureAsync (url) {\n  let texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, 1, 1, 0, gl.RGB, gl.UNSIGNED_BYTE, new Uint8Array([255, 255, 255]));\n\n  let obj = {\n    texture,\n    width: 1,\n    height: 1,\n    attach (id) {\n      gl.activeTexture(gl.TEXTURE0 + id);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      return id;\n    }\n  };\n\n  let image = new Image();\n  image.onload = () => {\n    obj.width = image.width;\n    obj.height = image.height;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n  };\n  image.src = url;\n\n  return obj;\n}\n\nfunction updateKeywords () {\n  let displayKeywords = [];\n  if (config.SHADING) displayKeywords.push(\"SHADING\");\n  if (config.BLOOM) displayKeywords.push(\"BLOOM\");\n  if (config.SUNRAYS) displayKeywords.push(\"SUNRAYS\");\n  displayMaterial.setKeywords(displayKeywords);\n}\n\nupdateKeywords();\ninitFramebuffers();\nmultipleSplats(parseInt(Math.random() * 20) + 5);\n\nlet lastUpdateTime = Date.now();\nlet colorUpdateTimer = 0.0;\nupdate();\n\nfunction update () {\n  const dt = calcDeltaTime();\n  if (resizeCanvas())\n    initFramebuffers();\n  updateColors(dt);\n  applyInputs();\n  if (!config.PAUSED)\n    step(dt);\n  render(null);\n  requestAnimationFrame(update);\n}\n\nfunction calcDeltaTime () {\n  let now = Date.now();\n  let dt = (now - lastUpdateTime) / 1000;\n  dt = Math.min(dt, 0.016666);\n  lastUpdateTime = now;\n  return dt;\n}\n\nfunction resizeCanvas () {\n  let width = scaleByPixelRatio(canvas.clientWidth);\n  let height = scaleByPixelRatio(canvas.clientHeight);\n  if (canvas.width != width || canvas.height != height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n  return false;\n}\n\nfunction updateColors (dt) {\n  if (!config.COLORFUL) return;\n\n  colorUpdateTimer += dt * config.COLOR_UPDATE_SPEED;\n  if (colorUpdateTimer >= 1) {\n    colorUpdateTimer = wrap(colorUpdateTimer, 0, 1);\n    pointers.forEach(p => {\n      p.color = generateColor();\n    });\n  }\n}\n\nfunction applyInputs () {\n  if (splatStack.length > 0)\n    multipleSplats(splatStack.pop());\n\n  pointers.forEach(p => {\n    if (p.moved) {\n      p.moved = false;\n      splatPointer(p);\n    }\n  });\n}\n\nfunction step (dt) {\n  gl.disable(gl.BLEND);\n\n  curlProgram.bind();\n  gl.uniform2f(curlProgram.uniforms.texelSize, velocity.texelSizeX, velocity.texelSizeY);\n  gl.uniform1i(curlProgram.uniforms.uVelocity, velocity.read.attach(0));\n  blit(curl);\n\n  vorticityProgram.bind();\n  gl.uniform2f(vorticityProgram.uniforms.texelSize, velocity.texelSizeX, velocity.texelSizeY);\n  gl.uniform1i(vorticityProgram.uniforms.uVelocity, velocity.read.attach(0));\n  gl.uniform1i(vorticityProgram.uniforms.uCurl, curl.attach(1));\n  gl.uniform1f(vorticityProgram.uniforms.curl, config.CURL);\n  gl.uniform1f(vorticityProgram.uniforms.dt, dt);\n  blit(velocity.write);\n  velocity.swap();\n\n  divergenceProgram.bind();\n  gl.uniform2f(divergenceProgram.uniforms.texelSize, velocity.texelSizeX, velocity.texelSizeY);\n  gl.uniform1i(divergenceProgram.uniforms.uVelocity, velocity.read.attach(0));\n  blit(divergence);\n\n  clearProgram.bind();\n  gl.uniform1i(clearProgram.uniforms.uTexture, pressure.read.attach(0));\n  gl.uniform1f(clearProgram.uniforms.value, config.PRESSURE);\n  blit(pressure.write);\n  pressure.swap();\n\n  pressureProgram.bind();\n  gl.uniform2f(pressureProgram.uniforms.texelSize, velocity.texelSizeX, velocity.texelSizeY);\n  gl.uniform1i(pressureProgram.uniforms.uDivergence, divergence.attach(0));\n  for (let i = 0; i < config.PRESSURE_ITERATIONS; i++) {\n    gl.uniform1i(pressureProgram.uniforms.uPressure, pressure.read.attach(1));\n    blit(pressure.write);\n    pressure.swap();\n  }\n\n  gradienSubtractProgram.bind();\n  gl.uniform2f(gradienSubtractProgram.uniforms.texelSize, velocity.texelSizeX, velocity.texelSizeY);\n  gl.uniform1i(gradienSubtractProgram.uniforms.uPressure, pressure.read.attach(0));\n  gl.uniform1i(gradienSubtractProgram.uniforms.uVelocity, velocity.read.attach(1));\n  blit(velocity.write);\n  velocity.swap();\n\n  advectionProgram.bind();\n  gl.uniform2f(advectionProgram.uniforms.texelSize, velocity.texelSizeX, velocity.texelSizeY);\n  if (!ext.supportLinearFiltering)\n    gl.uniform2f(advectionProgram.uniforms.dyeTexelSize, velocity.texelSizeX, velocity.texelSizeY);\n  let velocityId = velocity.read.attach(0);\n  gl.uniform1i(advectionProgram.uniforms.uVelocity, velocityId);\n  gl.uniform1i(advectionProgram.uniforms.uSource, velocityId);\n  gl.uniform1f(advectionProgram.uniforms.dt, dt);\n  gl.uniform1f(advectionProgram.uniforms.dissipation, config.VELOCITY_DISSIPATION);\n  blit(velocity.write);\n  velocity.swap();\n\n  if (!ext.supportLinearFiltering)\n    gl.uniform2f(advectionProgram.uniforms.dyeTexelSize, dye.texelSizeX, dye.texelSizeY);\n  gl.uniform1i(advectionProgram.uniforms.uVelocity, velocity.read.attach(0));\n  gl.uniform1i(advectionProgram.uniforms.uSource, dye.read.attach(1));\n  gl.uniform1f(advectionProgram.uniforms.dissipation, config.DENSITY_DISSIPATION);\n  blit(dye.write);\n  dye.swap();\n}\n\nfunction render (target) {\n  if (config.BLOOM)\n    applyBloom(dye.read, bloom);\n  if (config.SUNRAYS) {\n    applySunrays(dye.read, dye.write, sunrays);\n    blur(sunrays, sunraysTemp, 1);\n  }\n\n  if (target == null || !config.TRANSPARENT) {\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.enable(gl.BLEND);\n  }\n  else {\n    gl.disable(gl.BLEND);\n  }\n\n  if (!config.TRANSPARENT)\n    drawColor(target, normalizeColor(config.BACK_COLOR));\n  if (target == null && config.TRANSPARENT)\n    drawCheckerboard(target);\n  drawDisplay(target);\n}\n\nfunction drawColor (target, color) {\n  colorProgram.bind();\n  gl.uniform4f(colorProgram.uniforms.color, color.r, color.g, color.b, 1);\n  blit(target);\n}\n\nfunction drawCheckerboard (target) {\n  checkerboardProgram.bind();\n  gl.uniform1f(checkerboardProgram.uniforms.aspectRatio, canvas.width / canvas.height);\n  blit(target);\n}\n\nfunction drawDisplay (target) {\n  let width = target == null ? gl.drawingBufferWidth : target.width;\n  let height = target == null ? gl.drawingBufferHeight : target.height;\n\n  displayMaterial.bind();\n  if (config.SHADING)\n    gl.uniform2f(displayMaterial.uniforms.texelSize, 1.0 / width, 1.0 / height);\n  gl.uniform1i(displayMaterial.uniforms.uTexture, dye.read.attach(0));\n  if (config.BLOOM) {\n    gl.uniform1i(displayMaterial.uniforms.uBloom, bloom.attach(1));\n  }\n  if (config.SUNRAYS)\n    gl.uniform1i(displayMaterial.uniforms.uSunrays, sunrays.attach(3));\n  blit(target);\n}\n\nfunction applyBloom (source, destination) {\n  if (bloomFramebuffers.length < 2)\n    return;\n\n  let last = destination;\n\n  gl.disable(gl.BLEND);\n  bloomPrefilterProgram.bind();\n  let knee = config.BLOOM_THRESHOLD * config.BLOOM_SOFT_KNEE + 0.0001;\n  let curve0 = config.BLOOM_THRESHOLD - knee;\n  let curve1 = knee * 2;\n  let curve2 = 0.25 / knee;\n  gl.uniform3f(bloomPrefilterProgram.uniforms.curve, curve0, curve1, curve2);\n  gl.uniform1f(bloomPrefilterProgram.uniforms.threshold, config.BLOOM_THRESHOLD);\n  gl.uniform1i(bloomPrefilterProgram.uniforms.uTexture, source.attach(0));\n  blit(last);\n\n  bloomBlurProgram.bind();\n  for (let i = 0; i < bloomFramebuffers.length; i++) {\n    let dest = bloomFramebuffers[i];\n    gl.uniform2f(bloomBlurProgram.uniforms.texelSize, last.texelSizeX, last.texelSizeY);\n    gl.uniform1i(bloomBlurProgram.uniforms.uTexture, last.attach(0));\n    blit(dest);\n    last = dest;\n  }\n\n  gl.blendFunc(gl.ONE, gl.ONE);\n  gl.enable(gl.BLEND);\n\n  for (let i = bloomFramebuffers.length - 2; i >= 0; i--) {\n    let baseTex = bloomFramebuffers[i];\n    gl.uniform2f(bloomBlurProgram.uniforms.texelSize, last.texelSizeX, last.texelSizeY);\n    gl.uniform1i(bloomBlurProgram.uniforms.uTexture, last.attach(0));\n    gl.viewport(0, 0, baseTex.width, baseTex.height);\n    blit(baseTex);\n    last = baseTex;\n  }\n\n  gl.disable(gl.BLEND);\n  bloomFinalProgram.bind();\n  gl.uniform2f(bloomFinalProgram.uniforms.texelSize, last.texelSizeX, last.texelSizeY);\n  gl.uniform1i(bloomFinalProgram.uniforms.uTexture, last.attach(0));\n  gl.uniform1f(bloomFinalProgram.uniforms.intensity, config.BLOOM_INTENSITY);\n  blit(destination);\n}\n\nfunction applySunrays (source, mask, destination) {\n  gl.disable(gl.BLEND);\n  sunraysMaskProgram.bind();\n  gl.uniform1i(sunraysMaskProgram.uniforms.uTexture, source.attach(0));\n  blit(mask);\n\n  sunraysProgram.bind();\n  gl.uniform1f(sunraysProgram.uniforms.weight, config.SUNRAYS_WEIGHT);\n  gl.uniform1i(sunraysProgram.uniforms.uTexture, mask.attach(0));\n  blit(destination);\n}\n\nfunction blur (target, temp, iterations) {\n  blurProgram.bind();\n  for (let i = 0; i < iterations; i++) {\n    gl.uniform2f(blurProgram.uniforms.texelSize, target.texelSizeX, 0.0);\n    gl.uniform1i(blurProgram.uniforms.uTexture, target.attach(0));\n    blit(temp);\n\n    gl.uniform2f(blurProgram.uniforms.texelSize, 0.0, target.texelSizeY);\n    gl.uniform1i(blurProgram.uniforms.uTexture, temp.attach(0));\n    blit(target);\n  }\n}\n\nfunction splatPointer (pointer) {\n  let dx = pointer.deltaX * config.SPLAT_FORCE;\n  let dy = pointer.deltaY * config.SPLAT_FORCE;\n  splat(pointer.texcoordX, pointer.texcoordY, dx, dy, pointer.color);\n}\n\nfunction multipleSplats (amount) {\n  for (let i = 0; i < amount; i++) {\n    const color = generateColor();\n    color.r *= 10.0;\n    color.g *= 10.0;\n    color.b *= 10.0;\n    const x = Math.random();\n    const y = Math.random();\n    const dx = 1000 * (Math.random() - 0.5);\n    const dy = 1000 * (Math.random() - 0.5);\n    splat(x, y, dx, dy, color);\n  }\n}\n\nfunction splat (x, y, dx, dy, color) {\n  splatProgram.bind();\n  gl.uniform1i(splatProgram.uniforms.uTarget, velocity.read.attach(0));\n  gl.uniform1f(splatProgram.uniforms.aspectRatio, canvas.width / canvas.height);\n  gl.uniform2f(splatProgram.uniforms.point, x, y);\n  gl.uniform3f(splatProgram.uniforms.color, dx, dy, 0.0);\n  gl.uniform1f(splatProgram.uniforms.radius, correctRadius(config.SPLAT_RADIUS / 100.0));\n  blit(velocity.write);\n  velocity.swap();\n\n  gl.uniform1i(splatProgram.uniforms.uTarget, dye.read.attach(0));\n  gl.uniform3f(splatProgram.uniforms.color, color.r, color.g, color.b);\n  blit(dye.write);\n  dye.swap();\n}\n\nfunction correctRadius (radius) {\n  let aspectRatio = canvas.width / canvas.height;\n  if (aspectRatio > 1)\n    radius *= aspectRatio;\n  return radius;\n}\n\ncanvas.addEventListener('mousedown', e => {\n  let posX = scaleByPixelRatio(e.offsetX);\n  let posY = scaleByPixelRatio(e.offsetY);\n  let pointer = pointers.find(p => p.id == -1);\n  if (pointer == null)\n    pointer = new pointerPrototype();\n  updatePointerDownData(pointer, -1, posX, posY);\n});\n\ncanvas.addEventListener('mousemove', e => {\n  let pointer = pointers[0];\n  if (!pointer.down) return;\n  let posX = scaleByPixelRatio(e.offsetX);\n  let posY = scaleByPixelRatio(e.offsetY);\n  updatePointerMoveData(pointer, posX, posY);\n});\n\nwindow.addEventListener('mouseup', () => {\n  updatePointerUpData(pointers[0]);\n});\n\ncanvas.addEventListener('touchstart', e => {\n  e.preventDefault();\n  const touches = e.targetTouches;\n  while (touches.length >= pointers.length)\n    pointers.push(new pointerPrototype());\n  for (let i = 0; i < touches.length; i++) {\n    let posX = scaleByPixelRatio(touches[i].pageX);\n    let posY = scaleByPixelRatio(touches[i].pageY);\n    updatePointerDownData(pointers[i + 1], touches[i].identifier, posX, posY);\n  }\n});\n\ncanvas.addEventListener('touchmove', e => {\n  e.preventDefault();\n  const touches = e.targetTouches;\n  for (let i = 0; i < touches.length; i++) {\n    let pointer = pointers[i + 1];\n    if (!pointer.down) continue;\n    let posX = scaleByPixelRatio(touches[i].pageX);\n    let posY = scaleByPixelRatio(touches[i].pageY);\n    updatePointerMoveData(pointer, posX, posY);\n  }\n}, false);\n\nwindow.addEventListener('touchend', e => {\n  const touches = e.changedTouches;\n  for (let i = 0; i < touches.length; i++)\n  {\n    let pointer = pointers.find(p => p.id == touches[i].identifier);\n    if (pointer == null) continue;\n    updatePointerUpData(pointer);\n  }\n});\n\nwindow.addEventListener('keydown', e => {\n  //if (e.code === 'KeyP')\n  //  config.PAUSED = !config.PAUSED;\n  if (e.key === ' ')\n    splatStack.push(parseInt(Math.random() * 20) + 5);\n});\ndocument.onclick = (function (){\n  splatStack.push(parseInt(Math.random() * 20) + 5);\n});\nfunction updatePointerDownData (pointer, id, posX, posY) {\n  pointer.id = id;\n  pointer.down = true;\n  pointer.moved = false;\n  pointer.texcoordX = posX / canvas.width;\n  pointer.texcoordY = 1.0 - posY / canvas.height;\n  pointer.prevTexcoordX = pointer.texcoordX;\n  pointer.prevTexcoordY = pointer.texcoordY;\n  pointer.deltaX = 0;\n  pointer.deltaY = 0;\n  pointer.color = generateColor();\n}\n\nfunction updatePointerMoveData (pointer, posX, posY) {\n  pointer.prevTexcoordX = pointer.texcoordX;\n  pointer.prevTexcoordY = pointer.texcoordY;\n  pointer.texcoordX = posX / canvas.width;\n  pointer.texcoordY = 1.0 - posY / canvas.height;\n  pointer.deltaX = correctDeltaX(pointer.texcoordX - pointer.prevTexcoordX);\n  pointer.deltaY = correctDeltaY(pointer.texcoordY - pointer.prevTexcoordY);\n  pointer.moved = Math.abs(pointer.deltaX) > 0 || Math.abs(pointer.deltaY) > 0;\n}\n\nfunction updatePointerUpData (pointer) {\n  pointer.down = false;\n}\n\nfunction correctDeltaX (delta) {\n  let aspectRatio = canvas.width / canvas.height;\n  if (aspectRatio < 1) delta *= aspectRatio;\n  return delta;\n}\n\nfunction correctDeltaY (delta) {\n  let aspectRatio = canvas.width / canvas.height;\n  if (aspectRatio > 1) delta /= aspectRatio;\n  return delta;\n}\n\nfunction generateColor () {\n  let c = HSVtoRGB(Math.random(), 1.0, 1.0);\n  c.r *= 0.15;\n  c.g *= 0.15;\n  c.b *= 0.15;\n  return c;\n}\n\nfunction HSVtoRGB (h, s, v) {\n  let r, g, b, i, f, p, q, t;\n  i = Math.floor(h * 6);\n  f = h * 6 - i;\n  p = v * (1 - s);\n  q = v * (1 - f * s);\n  t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0: r = v, g = t, b = p; break;\n    case 1: r = q, g = v, b = p; break;\n    case 2: r = p, g = v, b = t; break;\n    case 3: r = p, g = q, b = v; break;\n    case 4: r = t, g = p, b = v; break;\n    case 5: r = v, g = p, b = q; break;\n  }\n\n  return {\n    r,\n    g,\n    b\n  };\n}\n\nfunction normalizeColor (input) {\n  let output = {\n    r: input.r / 255,\n    g: input.g / 255,\n    b: input.b / 255\n  };\n  return output;\n}\n\nfunction wrap (value, min, max) {\n  let range = max - min;\n  if (range == 0) return min;\n  return (value - min) % range + min;\n}\n\nfunction getResolution (resolution) {\n  let aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\n  if (aspectRatio < 1)\n    aspectRatio = 1.0 / aspectRatio;\n\n  let min = Math.round(resolution);\n  let max = Math.round(resolution * aspectRatio);\n\n  if (gl.drawingBufferWidth > gl.drawingBufferHeight)\n    return { width: max, height: min };\n  else\n    return { width: min, height: max };\n}\n\nfunction getTextureScale (texture, width, height) {\n  return {\n    x: width / texture.width,\n    y: height / texture.height\n  };\n}\n\nfunction scaleByPixelRatio (input) {\n  let pixelRatio = window.devicePixelRatio || 1;\n  return Math.floor(input * pixelRatio);\n}\n\nfunction hashCode (s) {\n  if (s.length == 0) return 0;\n  let hash = 0;\n  for (let i = 0; i < s.length; i++) {\n    hash = (hash << 5) - hash + s.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n};\n"],"sourceRoot":""}