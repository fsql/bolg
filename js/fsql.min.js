!function(e){var n={};function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(r,i,function(n){return e[n]}.bind(null,i));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="/",t(t.s=0)}([function(e,n,t){t(1)(),t(3),t(4),t(5)},function(e,n,t){var r=t(2);e.exports=function(){Array.prototype.forEach.call($(".content img").not("[hidden]").not(".no-fancybox").not(".post-share img"),(function(e){r(e)}))}},function(e,n,t){var r,i,o;function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}o=function(){"use strict";var e=function(){return document.documentElement.clientWidth},n=function(){return document.documentElement.clientHeight},t=function(e,n){this.w=e,this.h=n},r=function(e,n){this.img=e,this.preservedTransform=e.style.transform,this.wrap=null,this.overlay=null,this.offset=n};r.prototype.forceRepaint=function(){this.img.offsetWidth},r.prototype.zoom=function(){var e=new t(this.img.naturalWidth,this.img.naturalHeight);this.wrap=document.createElement("div"),this.wrap.classList.add("zoom-img-wrap"),this.img.parentNode.insertBefore(this.wrap,this.img),this.wrap.appendChild(this.img),this.img.classList.add("zoom-img"),this.img.setAttribute("data-action","zoom-out"),this.overlay=document.createElement("div"),this.overlay.classList.add("zoom-overlay"),document.body.appendChild(this.overlay),this.forceRepaint();var n=this.calculateScale(e);this.forceRepaint(),this.animate(n),document.body.classList.add("zoom-overlay-open")},r.prototype.calculateScale=function(t){var r=t.w/this.img.width,i=e()-this.offset,o=n()-this.offset,a=t.w/t.h,u=i/o;return t.w<i&&t.h<o?r:a<u?o/t.h*r:i/t.w*r},r.prototype.animate=function(t){var r,i,o,a,u=(r=this.img,i=r.getBoundingClientRect(),o=document.documentElement,a=window,{top:i.top+a.pageYOffset-o.clientTop,left:i.left+a.pageXOffset-o.clientLeft}),c=window.pageYOffset,f=e()/2,v=c+n()/2,l="scale("+t+")",s="translate3d("+(f-(u.left+this.img.width/2))+"px, "+(v-(u.top+this.img.height/2))+"px, 0px)";this.img.style.transform=l,this.wrap.style.transform=s},r.prototype.dispose=function(){null!==this.wrap&&null!==this.wrap.parentNode&&(this.img.classList.remove("zoom-img"),this.img.setAttribute("data-action","zoom"),this.wrap.parentNode.insertBefore(this.img,this.wrap),this.wrap.parentNode.removeChild(this.wrap),document.body.removeChild(this.overlay),document.body.classList.remove("zoom-overlay-transitioning"))},r.prototype.close=function(){var e,n,t,r=this;document.body.classList.add("zoom-overlay-transitioning"),this.img.style.transform=this.preservedTransform,0===this.img.style.length&&this.img.removeAttribute("style"),this.wrap.style.transform="none",e=this.img,n="transitionend",t=function(){r.dispose(),document.body.classList.remove("zoom-overlay-open")},e.addEventListener(n,(function e(r){r.target.removeEventListener(n,e),t()}))};
/**
 * Pure JavaScript implementation of zoom.js.
 *
 * Original preamble:
 * zoom.js - It's the best way to zoom an image
 * @version v0.0.2
 * @link https://github.com/fat/zoom.js
 * @license MIT
 *
 * Needs a related CSS file to work. See the README at
 * https://github.com/nishanths/zoom.js for more info.
 *
 * This is a fork of the original zoom.js implementation by @fat.
 * Copyrights for the original project are held by @fat. All other copyright
 * for changes in the fork are held by Nishanth Shanmugham.
 *
 * Copyright (c) 2013 @fat
 * The MIT License. Copyright © 2016 Nishanth Shanmugham.
 */
var i=null,o=-1,a=-1;function u(){-1===o&&(o=window.pageYOffset),Math.abs(o-window.pageYOffset)>=40&&s()}function c(e){27===e.keyCode&&s()}function f(e){var n=e.touches[0];null!==n&&(a=n.pageY,e.target.addEventListener("touchmove",v))}function v(e){var n=e.touches[0];null!==n&&Math.abs(n.pageY-a)>10&&(s(),e.target.removeEventListener("touchmove",v))}function l(){s()}function s(e){null!==i&&(e?i.dispose():i.close(),document.removeEventListener("scroll",u),document.removeEventListener("keyup",c),document.removeEventListener("touchstart",f),document.removeEventListener("click",l,!0),i=null)}function m(n){document.body.classList.contains("zoom-overlay-open")||(n.metaKey||n.ctrlKey?window.open(n.target.getAttribute("data-original")||n.target.src,"_blank"):n.target.width>=e()-80||(s(!0),(i=new r(n.target,80)).zoom(),document.addEventListener("scroll",u),document.addEventListener("keyup",c),document.addEventListener("touchstart",f),document.addEventListener("click",l,!0)))}return function(e){return e.setAttribute("data-action","zoom"),e.addEventListener("click",m),function(){return e.removeEventListener("click",m)}}},"object"===a(n)&&void 0!==e?e.exports=o():void 0===(i="function"==typeof(r=o)?r.call(n,t,n,e):r)||(e.exports=i)},function(e,n){!function e(){window.setTimeout((function(){e()}),1e3);var n=new Date,t=new Date("09/08/2020 00:00:00");n.setTime(n.getTime()+250),days=(n-t)/1e3/60/60/24,dnum=Math.floor(days),hours=(n-t)/1e3/60/60-24*dnum,hnum=Math.floor(hours),1==String(hnum).length&&(hnum="0"+hnum),minutes=(n-t)/1e3/60-1440*dnum-60*hnum,mnum=Math.floor(minutes),1==String(mnum).length&&(mnum="0"+mnum),seconds=(n-t)/1e3-86400*dnum-3600*hnum-60*mnum,snum=Math.round(seconds),1==String(snum).length&&(snum="0"+snum),$("#timeDate").html("本博客已运行 "+dnum+" 天 "),$("#times").html(hnum+" 小时 "+mnum+" 分 "+snum+" 秒")}()},function(e,n){},function(e,n,t){"use strict";function r(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function i(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(e,n,t){return n&&i(e.prototype,n),t&&i(e,t),e}var a=document.createElement("canvas"),u=window.devicePixelRatio||1,c=window.innerWidth,f=window.innerHeight;a.width=c*u,a.height=f*u,a.style.cssText="opacity: 0.3;position:fixed;top:0;left:0;z-index: -1;width:100%;height:100%;pointer-events:none;",document.getElementsByTagName("body")[0].appendChild(a),ye();var v={SIM_RESOLUTION:128,DYE_RESOLUTION:1024,CAPTURE_RESOLUTION:512,DENSITY_DISSIPATION:1,VELOCITY_DISSIPATION:.2,PRESSURE:.8,PRESSURE_ITERATIONS:20,CURL:35,SPLAT_RADIUS:.25,SPLAT_FORCE:6e3,SHADING:!0,COLORFUL:!0,COLOR_UPDATE_SPEED:10,PAUSED:!1,BACK_COLOR:{r:255,g:255,b:255},TRANSPARENT:!1,BLOOM:!0,BLOOM_ITERATIONS:8,BLOOM_RESOLUTION:256,BLOOM_INTENSITY:.8,BLOOM_THRESHOLD:.6,BLOOM_SOFT_KNEE:.7,SUNRAYS:!0,SUNRAYS_RESOLUTION:196,SUNRAYS_WEIGHT:1};function l(){this.id=-1,this.texcoordX=0,this.texcoordY=0,this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}var s=[],m=[];s.push(new l);var d=function(e){var n,t,r={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1},i=e.getContext("webgl2",r),o=!!i;o||(i=e.getContext("webgl",r)||e.getContext("experimental-webgl",r));o?(i.getExtension("EXT_color_buffer_float"),t=i.getExtension("OES_texture_float_linear")):(n=i.getExtension("OES_texture_half_float"),t=i.getExtension("OES_texture_half_float_linear"));i.clearColor(0,0,0,1);var a,u,c,f=o?i.HALF_FLOAT:n.HALF_FLOAT_OES;o?(a=p(i,i.RGBA16F,i.RGBA,f),u=p(i,i.RG16F,i.RG,f),c=p(i,i.R16F,i.RED,f)):(a=p(i,i.RGBA,i.RGBA,f),u=p(i,i.RGBA,i.RGBA,f),c=p(i,i.RGBA,i.RGBA,f));return{gl:i,ext:{formatRGBA:a,formatRG:u,formatR:c,halfFloatTexType:f,supportLinearFiltering:t}}}(a),h=d.gl,g=d.ext;function p(e,n,t,r){if(!function(e,n,t,r){var i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,n,4,4,0,t,r,null);var o=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0),e.checkFramebufferStatus(e.FRAMEBUFFER)==e.FRAMEBUFFER_COMPLETE}(e,n,t,r))switch(n){case e.R16F:return p(e,e.RG16F,e.RG,r);case e.RG16F:return p(e,e.RGBA16F,e.RGBA,r);default:return null}return{internalFormat:n,format:t}}/Mobi|Android/i.test(navigator.userAgent)&&(v.DYE_RESOLUTION=512),g.supportLinearFiltering||(v.DYE_RESOLUTION=512,v.SHADING=!1,v.BLOOM=!1,v.SUNRAYS=!1);var x=function(){function e(n,t){r(this,e),this.vertexShader=n,this.fragmentShaderSource=t,this.programs=[],this.activeProgram=null,this.uniforms=[]}return o(e,[{key:"setKeywords",value:function(e){for(var n=0,t=0;t<e.length;t++)n+=Ne(e[t]);var r=this.programs[n];if(null==r){var i=S(h.FRAGMENT_SHADER,this.fragmentShaderSource,e);r=E(this.vertexShader,i),this.programs[n]=r}r!=this.activeProgram&&(this.uniforms=R(r),this.activeProgram=r)}},{key:"bind",value:function(){h.useProgram(this.activeProgram)}}]),e}(),T=function(){function e(n,t){r(this,e),this.uniforms={},this.program=E(n,t),this.uniforms=R(this.program)}return o(e,[{key:"bind",value:function(){h.useProgram(this.program)}}]),e}();function E(e,n){var t=h.createProgram();return h.attachShader(t,e),h.attachShader(t,n),h.linkProgram(t),h.getProgramParameter(t,h.LINK_STATUS)||console.trace(h.getProgramInfoLog(t)),t}function R(e){for(var n=[],t=h.getProgramParameter(e,h.ACTIVE_UNIFORMS),r=0;r<t;r++){var i=h.getActiveUniform(e,r).name;n[i]=h.getUniformLocation(e,i)}return n}function S(e,n,t){n=function(e,n){if(null==n)return e;var t="";return n.forEach((function(e){t+="#define "+e+"\n"})),t+e}(n,t);var r=h.createShader(e);return h.shaderSource(r,n),h.compileShader(r),h.getShaderParameter(r,h.COMPILE_STATUS)||console.trace(h.getShaderInfoLog(r)),r}var y,D,A,L,_,w,b=S(h.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),O=S(h.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        float offset = 1.33333333;\n        vL = vUv - texelSize * offset;\n        vR = vUv + texelSize * offset;\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),U=S(h.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = texture2D(uTexture, vUv) * 0.29411764;\n        sum += texture2D(uTexture, vL) * 0.35294117;\n        sum += texture2D(uTexture, vR) * 0.35294117;\n        gl_FragColor = sum;\n    }\n"),F=S(h.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        gl_FragColor = texture2D(uTexture, vUv);\n    }\n"),N=S(h.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n"),B=S(h.FRAGMENT_SHADER,"\n    precision mediump float;\n\n    uniform vec4 color;\n\n    void main () {\n        gl_FragColor = color;\n    }\n"),M=S(h.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float aspectRatio;\n\n    #define SCALE 25.0\n\n    void main () {\n        vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n        float v = mod(uv.x + uv.y, 2.0);\n        v = v * 0.1 + 0.8;\n        gl_FragColor = vec4(vec3(v), 1.0);\n    }\n"),I=S(h.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform vec3 curve;\n    uniform float threshold;\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n        float br = max(c.r, max(c.g, c.b));\n        float rq = clamp(br - curve.x, 0.0, curve.y);\n        rq = curve.z * rq * rq;\n        c *= max(rq, br - threshold) / max(br, 0.0001);\n        gl_FragColor = vec4(c, 0.0);\n    }\n"),P=S(h.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum;\n    }\n"),z=S(h.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform float intensity;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum * intensity;\n    }\n"),C=S(h.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 c = texture2D(uTexture, vUv);\n        float br = max(c.r, max(c.g, c.b));\n        c.a = 1.0 - min(max(br * 20.0, 0.0), 0.8);\n        gl_FragColor = c;\n    }\n"),Y=S(h.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float weight;\n\n    #define ITERATIONS 16\n\n    void main () {\n        float Density = 0.3;\n        float Decay = 0.95;\n        float Exposure = 0.7;\n\n        vec2 coord = vUv;\n        vec2 dir = vUv - 0.5;\n\n        dir *= 1.0 / float(ITERATIONS) * Density;\n        float illuminationDecay = 1.0;\n\n        float color = texture2D(uTexture, vUv).a;\n\n        for (int i = 0; i < ITERATIONS; i++)\n        {\n            coord -= dir;\n            float col = texture2D(uTexture, coord).a;\n            color += col * illuminationDecay * weight;\n            illuminationDecay *= Decay;\n        }\n\n        gl_FragColor = vec4(color * Exposure, 0.0, 0.0, 1.0);\n    }\n"),X=S(h.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n"),G=S(h.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform vec2 dyeTexelSize;\n    uniform float dt;\n    uniform float dissipation;\n\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n        vec2 st = uv / tsize - 0.5;\n\n        vec2 iuv = floor(st);\n        vec2 fuv = fract(st);\n\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n    }\n\n    void main () {\n    #ifdef MANUAL_FILTERING\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n        vec4 result = bilerp(uSource, coord, dyeTexelSize);\n    #else\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        vec4 result = texture2D(uSource, coord);\n    #endif\n        float decay = 1.0 + dissipation * dt;\n        gl_FragColor = result / decay;\n    }",g.supportLinearFiltering?null:["MANUAL_FILTERING"]),H=S(h.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).x;\n        float R = texture2D(uVelocity, vR).x;\n        float T = texture2D(uVelocity, vT).y;\n        float B = texture2D(uVelocity, vB).y;\n\n        vec2 C = texture2D(uVelocity, vUv).xy;\n        if (vL.x < 0.0) { L = -C.x; }\n        if (vR.x > 1.0) { R = -C.x; }\n        if (vT.y > 1.0) { T = -C.y; }\n        if (vB.y < 0.0) { B = -C.y; }\n\n        float div = 0.5 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n    }\n"),V=S(h.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n    }\n"),k=S(h.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n\n    void main () {\n        float L = texture2D(uCurl, vL).x;\n        float R = texture2D(uCurl, vR).x;\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n\n        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n        force /= length(force) + 0.0001;\n        force *= curl * C;\n        force.y *= -1.0;\n\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity += force * dt;\n        velocity = min(max(velocity, -1000.0), 1000.0);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),W=S(h.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n"),j=S(h.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),K=(h.bindBuffer(h.ARRAY_BUFFER,h.createBuffer()),h.bufferData(h.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),h.STATIC_DRAW),h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,h.createBuffer()),h.bufferData(h.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),h.STATIC_DRAW),h.vertexAttribPointer(0,2,h.FLOAT,!1,0,0),h.enableVertexAttribArray(0),function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];null==e?(h.viewport(0,0,h.drawingBufferWidth,h.drawingBufferHeight),h.bindFramebuffer(h.FRAMEBUFFER,null)):(h.viewport(0,0,e.width,e.height),h.bindFramebuffer(h.FRAMEBUFFER,e.fbo)),n&&(h.clearColor(0,0,0,1),h.clear(h.COLOR_BUFFER_BIT)),h.drawElements(h.TRIANGLES,6,h.UNSIGNED_SHORT,0)});var q,$,J,Q=[],Z=new T(O,U),ee=new T(b,F),ne=new T(b,N),te=new T(b,B),re=new T(b,M),ie=new T(b,I),oe=new T(b,P),ae=new T(b,z),ue=new T(b,C),ce=new T(b,Y),fe=new T(b,X),ve=new T(b,G),le=new T(b,H),se=new T(b,V),me=new T(b,k),de=new T(b,W),he=new T(b,j),ge=new x(b,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uSunrays;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    uniform vec2 texelSize;\n\n    vec3 linearToGamma (vec3 color) {\n        color = max(color, vec3(0));\n        return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n    }\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n\n    #ifdef SHADING\n        vec3 lc = texture2D(uTexture, vL).rgb;\n        vec3 rc = texture2D(uTexture, vR).rgb;\n        vec3 tc = texture2D(uTexture, vT).rgb;\n        vec3 bc = texture2D(uTexture, vB).rgb;\n\n        float dx = length(rc) - length(lc);\n        float dy = length(tc) - length(bc);\n\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        c *= diffuse;\n    #endif\n\n    #ifdef BLOOM\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n    #endif\n\n    #ifdef SUNRAYS\n        float sunrays = texture2D(uSunrays, vUv).r;\n        c *= sunrays;\n    #ifdef BLOOM\n        bloom *= sunrays;\n    #endif\n    #endif\n\n    #ifdef BLOOM\n        float noise = texture2D(uDithering, vUv * ditherScale).r;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 255.0;\n        bloom = linearToGamma(bloom);\n        c += bloom;\n    #endif\n\n        float a = max(c.r, max(c.g, c.b));\n        gl_FragColor = vec4(c, a);\n    }\n");function pe(){var e=Ue(v.SIM_RESOLUTION),n=Ue(v.DYE_RESOLUTION),t=g.halfFloatTexType,r=g.formatRGBA,i=g.formatRG,o=g.formatR,a=g.supportLinearFiltering?h.LINEAR:h.NEAREST;h.disable(h.BLEND),y=null==y?Te(n.width,n.height,r.internalFormat,r.format,t,a):Ee(y,n.width,n.height,r.internalFormat,r.format,t,a),D=null==D?Te(e.width,e.height,i.internalFormat,i.format,t,a):Ee(D,e.width,e.height,i.internalFormat,i.format,t,a),A=xe(e.width,e.height,o.internalFormat,o.format,t,h.NEAREST),L=xe(e.width,e.height,o.internalFormat,o.format,t,h.NEAREST),_=Te(e.width,e.height,o.internalFormat,o.format,t,h.NEAREST),function(){var e=Ue(v.BLOOM_RESOLUTION),n=g.halfFloatTexType,t=g.formatRGBA,r=g.supportLinearFiltering?h.LINEAR:h.NEAREST;w=xe(e.width,e.height,t.internalFormat,t.format,n,r),Q.length=0;for(var i=0;i<v.BLOOM_ITERATIONS;i++){var o=e.width>>i+1,a=e.height>>i+1;if(o<2||a<2)break;var u=xe(o,a,t.internalFormat,t.format,n,r);Q.push(u)}}(),function(){var e=Ue(v.SUNRAYS_RESOLUTION),n=g.halfFloatTexType,t=g.formatR,r=g.supportLinearFiltering?h.LINEAR:h.NEAREST;q=xe(e.width,e.height,t.internalFormat,t.format,n,r),$=xe(e.width,e.height,t.internalFormat,t.format,n,r)}()}function xe(e,n,t,r,i,o){h.activeTexture(h.TEXTURE0);var a=h.createTexture();h.bindTexture(h.TEXTURE_2D,a),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MIN_FILTER,o),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MAG_FILTER,o),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_S,h.CLAMP_TO_EDGE),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_T,h.CLAMP_TO_EDGE),h.texImage2D(h.TEXTURE_2D,0,t,e,n,0,r,i,null);var u=h.createFramebuffer();return h.bindFramebuffer(h.FRAMEBUFFER,u),h.framebufferTexture2D(h.FRAMEBUFFER,h.COLOR_ATTACHMENT0,h.TEXTURE_2D,a,0),h.viewport(0,0,e,n),h.clear(h.COLOR_BUFFER_BIT),{texture:a,fbo:u,width:e,height:n,texelSizeX:1/e,texelSizeY:1/n,attach:function(e){return h.activeTexture(h.TEXTURE0+e),h.bindTexture(h.TEXTURE_2D,a),e}}}function Te(e,n,t,r,i,o){var a=xe(e,n,t,r,i,o),u=xe(e,n,t,r,i,o);return{width:e,height:n,texelSizeX:a.texelSizeX,texelSizeY:a.texelSizeY,get read(){return a},set read(e){a=e},get write(){return u},set write(e){u=e},swap:function(){var e=a;a=u,u=e}}}function Ee(e,n,t,r,i,o,a){return e.width==n&&e.height==t||(e.read=function(e,n,t,r,i,o,a){var u=xe(n,t,r,i,o,a);return ee.bind(),h.uniform1i(ee.uniforms.uTexture,e.attach(0)),K(u),u}(e.read,n,t,r,i,o,a),e.write=xe(n,t,r,i,o,a),e.width=n,e.height=t,e.texelSizeX=1/n,e.texelSizeY=1/t),e}J=[],v.SHADING&&J.push("SHADING"),v.BLOOM&&J.push("BLOOM"),v.SUNRAYS&&J.push("SUNRAYS"),ge.setKeywords(J),pe(),Ae(parseInt(20*Math.random())+5);var Re=Date.now(),Se=0;function ye(){var e=Fe(a.clientWidth),n=Fe(a.clientHeight);return(a.width!=e||a.height!=n)&&(a.width=e,a.height=n,!0)}function De(e){var n,t,r,i;v.BLOOM&&function(e,n){if(Q.length<2)return;var t=n;h.disable(h.BLEND),ie.bind();var r=v.BLOOM_THRESHOLD*v.BLOOM_SOFT_KNEE+1e-4,i=v.BLOOM_THRESHOLD-r,o=2*r,a=.25/r;h.uniform3f(ie.uniforms.curve,i,o,a),h.uniform1f(ie.uniforms.threshold,v.BLOOM_THRESHOLD),h.uniform1i(ie.uniforms.uTexture,e.attach(0)),K(t),oe.bind();for(var u=0;u<Q.length;u++){var c=Q[u];h.uniform2f(oe.uniforms.texelSize,t.texelSizeX,t.texelSizeY),h.uniform1i(oe.uniforms.uTexture,t.attach(0)),K(c),t=c}h.blendFunc(h.ONE,h.ONE),h.enable(h.BLEND);for(var f=Q.length-2;f>=0;f--){var l=Q[f];h.uniform2f(oe.uniforms.texelSize,t.texelSizeX,t.texelSizeY),h.uniform1i(oe.uniforms.uTexture,t.attach(0)),h.viewport(0,0,l.width,l.height),K(l),t=l}h.disable(h.BLEND),ae.bind(),h.uniform2f(ae.uniforms.texelSize,t.texelSizeX,t.texelSizeY),h.uniform1i(ae.uniforms.uTexture,t.attach(0)),h.uniform1f(ae.uniforms.intensity,v.BLOOM_INTENSITY),K(n)}(y.read,w),v.SUNRAYS&&(n=y.read,t=y.write,r=q,h.disable(h.BLEND),ue.bind(),h.uniform1i(ue.uniforms.uTexture,n.attach(0)),K(t),ce.bind(),h.uniform1f(ce.uniforms.weight,v.SUNRAYS_WEIGHT),h.uniform1i(ce.uniforms.uTexture,t.attach(0)),K(r),function(e,n,t){Z.bind();for(var r=0;r<t;r++)h.uniform2f(Z.uniforms.texelSize,e.texelSizeX,0),h.uniform1i(Z.uniforms.uTexture,e.attach(0)),K(n),h.uniform2f(Z.uniforms.texelSize,0,e.texelSizeY),h.uniform1i(Z.uniforms.uTexture,n.attach(0)),K(e)}(q,$,1)),null!=e&&v.TRANSPARENT?h.disable(h.BLEND):(h.blendFunc(h.ONE,h.ONE_MINUS_SRC_ALPHA),h.enable(h.BLEND)),v.TRANSPARENT||function(e,n){te.bind(),h.uniform4f(te.uniforms.color,n.r,n.g,n.b,1),K(e)}(e,{r:(i=v.BACK_COLOR).r/255,g:i.g/255,b:i.b/255}),null==e&&v.TRANSPARENT&&function(e){re.bind(),h.uniform1f(re.uniforms.aspectRatio,a.width/a.height),K(e)}(e),function(e){var n=null==e?h.drawingBufferWidth:e.width,t=null==e?h.drawingBufferHeight:e.height;ge.bind(),v.SHADING&&h.uniform2f(ge.uniforms.texelSize,1/n,1/t);h.uniform1i(ge.uniforms.uTexture,y.read.attach(0)),v.BLOOM&&h.uniform1i(ge.uniforms.uBloom,w.attach(1));v.SUNRAYS&&h.uniform1i(ge.uniforms.uSunrays,q.attach(3));K(e)}(e)}function Ae(e){for(var n=0;n<e;n++){var t=Oe();t.r*=10,t.g*=10,t.b*=10,Le(Math.random(),Math.random(),1e3*(Math.random()-.5),1e3*(Math.random()-.5),t)}}function Le(e,n,t,r,i){fe.bind(),h.uniform1i(fe.uniforms.uTarget,D.read.attach(0)),h.uniform1f(fe.uniforms.aspectRatio,a.width/a.height),h.uniform2f(fe.uniforms.point,e,n),h.uniform3f(fe.uniforms.color,t,r,0),h.uniform1f(fe.uniforms.radius,function(e){var n=a.width/a.height;n>1&&(e*=n);return e}(v.SPLAT_RADIUS/100)),K(D.write),D.swap(),h.uniform1i(fe.uniforms.uTarget,y.read.attach(0)),h.uniform3f(fe.uniforms.color,i.r,i.g,i.b),K(y.write),y.swap()}function _e(e,n,t,r){e.id=n,e.down=!0,e.moved=!1,e.texcoordX=t/a.width,e.texcoordY=1-r/a.height,e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.deltaX=0,e.deltaY=0,e.color=Oe()}function we(e,n,t){e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.texcoordX=n/a.width,e.texcoordY=1-t/a.height,e.deltaX=function(e){var n=a.width/a.height;n<1&&(e*=n);return e}(e.texcoordX-e.prevTexcoordX),e.deltaY=function(e){var n=a.width/a.height;n>1&&(e/=n);return e}(e.texcoordY-e.prevTexcoordY),e.moved=Math.abs(e.deltaX)>0||Math.abs(e.deltaY)>0}function be(e){e.down=!1}function Oe(){var e=function(e,n,t){var r,i,o,a,u,c,f,v;switch(a=Math.floor(6*e),c=t*(1-n),f=t*(1-(u=6*e-a)*n),v=t*(1-(1-u)*n),a%6){case 0:r=t,i=v,o=c;break;case 1:r=f,i=t,o=c;break;case 2:r=c,i=t,o=v;break;case 3:r=c,i=f,o=t;break;case 4:r=v,i=c,o=t;break;case 5:r=t,i=c,o=f}return{r:r,g:i,b:o}}(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}function Ue(e){var n=h.drawingBufferWidth/h.drawingBufferHeight;n<1&&(n=1/n);var t=Math.round(e),r=Math.round(e*n);return h.drawingBufferWidth>h.drawingBufferHeight?{width:r,height:t}:{width:t,height:r}}function Fe(e){var n=window.devicePixelRatio||1;return Math.floor(e*n)}function Ne(e){if(0==e.length)return 0;for(var n=0,t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return n}!function e(){var n=function(){var e=Date.now(),n=(e-Re)/1e3;return n=Math.min(n,.016666),Re=e,n}();ye()&&pe();(function(e){if(!v.COLORFUL)return;(Se+=e*v.COLOR_UPDATE_SPEED)>=1&&(n=Se,Se=0==(r=1-(t=0))?t:(n-t)%r+t,s.forEach((function(e){e.color=Oe()})));var n,t,r})(n),function(){m.length>0&&Ae(m.pop());s.forEach((function(e){var n,t,r;e.moved&&(e.moved=!1,t=(n=e).deltaX*v.SPLAT_FORCE,r=n.deltaY*v.SPLAT_FORCE,Le(n.texcoordX,n.texcoordY,t,r,n.color))}))}(),v.PAUSED||function(e){h.disable(h.BLEND),se.bind(),h.uniform2f(se.uniforms.texelSize,D.texelSizeX,D.texelSizeY),h.uniform1i(se.uniforms.uVelocity,D.read.attach(0)),K(L),me.bind(),h.uniform2f(me.uniforms.texelSize,D.texelSizeX,D.texelSizeY),h.uniform1i(me.uniforms.uVelocity,D.read.attach(0)),h.uniform1i(me.uniforms.uCurl,L.attach(1)),h.uniform1f(me.uniforms.curl,v.CURL),h.uniform1f(me.uniforms.dt,e),K(D.write),D.swap(),le.bind(),h.uniform2f(le.uniforms.texelSize,D.texelSizeX,D.texelSizeY),h.uniform1i(le.uniforms.uVelocity,D.read.attach(0)),K(A),ne.bind(),h.uniform1i(ne.uniforms.uTexture,_.read.attach(0)),h.uniform1f(ne.uniforms.value,v.PRESSURE),K(_.write),_.swap(),de.bind(),h.uniform2f(de.uniforms.texelSize,D.texelSizeX,D.texelSizeY),h.uniform1i(de.uniforms.uDivergence,A.attach(0));for(var n=0;n<v.PRESSURE_ITERATIONS;n++)h.uniform1i(de.uniforms.uPressure,_.read.attach(1)),K(_.write),_.swap();he.bind(),h.uniform2f(he.uniforms.texelSize,D.texelSizeX,D.texelSizeY),h.uniform1i(he.uniforms.uPressure,_.read.attach(0)),h.uniform1i(he.uniforms.uVelocity,D.read.attach(1)),K(D.write),D.swap(),ve.bind(),h.uniform2f(ve.uniforms.texelSize,D.texelSizeX,D.texelSizeY),g.supportLinearFiltering||h.uniform2f(ve.uniforms.dyeTexelSize,D.texelSizeX,D.texelSizeY);var t=D.read.attach(0);h.uniform1i(ve.uniforms.uVelocity,t),h.uniform1i(ve.uniforms.uSource,t),h.uniform1f(ve.uniforms.dt,e),h.uniform1f(ve.uniforms.dissipation,v.VELOCITY_DISSIPATION),K(D.write),D.swap(),g.supportLinearFiltering||h.uniform2f(ve.uniforms.dyeTexelSize,y.texelSizeX,y.texelSizeY);h.uniform1i(ve.uniforms.uVelocity,D.read.attach(0)),h.uniform1i(ve.uniforms.uSource,y.read.attach(1)),h.uniform1f(ve.uniforms.dissipation,v.DENSITY_DISSIPATION),K(y.write),y.swap()}(n);De(null),requestAnimationFrame(e)}(),a.addEventListener("mousedown",(function(e){var n=Fe(e.offsetX),t=Fe(e.offsetY),r=s.find((function(e){return-1==e.id}));null==r&&(r=new l),_e(r,-1,n,t)})),a.addEventListener("mousemove",(function(e){var n=s[0];n.down&&we(n,Fe(e.offsetX),Fe(e.offsetY))})),window.addEventListener("mouseup",(function(){be(s[0])})),a.addEventListener("touchstart",(function(e){e.preventDefault();for(var n=e.targetTouches;n.length>=s.length;)s.push(new l);for(var t=0;t<n.length;t++){var r=Fe(n[t].pageX),i=Fe(n[t].pageY);_e(s[t+1],n[t].identifier,r,i)}})),a.addEventListener("touchmove",(function(e){e.preventDefault();for(var n=e.targetTouches,t=0;t<n.length;t++){var r=s[t+1];if(r.down)we(r,Fe(n[t].pageX),Fe(n[t].pageY))}}),!1),window.addEventListener("touchend",(function(e){for(var n=e.changedTouches,t=function(e){var t=s.find((function(t){return t.id==n[e].identifier}));if(null==t)return"continue";be(t)},r=0;r<n.length;r++)t(r)})),window.addEventListener("keydown",(function(e){" "===e.key&&m.push(parseInt(20*Math.random())+5)})),document.onclick=function(){m.push(parseInt(20*Math.random())+5)}}]);
//# sourceMappingURL=fsql.min.js.map